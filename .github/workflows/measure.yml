name: measure

on:
  push:
    branches: main

jobs:
  bash:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: bash -version
    - run: ./run bash bash > result-bash.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-bash
        path: result-bash.txt

  c:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - run: cc --version
    - run: ./run c c > result-c.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-c
        path: result-c.txt

  deno:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        deno: ["1.11.0", "1.10.3", "1.9.2"]
    steps:
    - uses: actions/checkout@v2
    - uses: denoland/setup-deno@v1
      with:
        deno-version: ${{ matrix.deno }}
    - run: deno --version
    - run: ./run deno deno-${{ matrix.deno }} > result-deno-${{ matrix.deno }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-deno-${{ matrix.deno }}
        path: result-deno-${{ matrix.deno }}.txt

  go:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: ["1.16.5", "1.15.13", "1.14.15"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}
    - run: go version
    - run: ./run go go-${{ matrix.go }} > result-go-${{ matrix.go }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-go-${{ matrix.go }}
        path: result-go-${{ matrix.go }}.txt

  java:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        java: ["8", "11", "15"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-java@v2
      with:
        distribution: 'adopt'
        java-version: ${{ matrix.java }}
    - run: java -version
    - run: ./run java java-${{ matrix.java }} > result-java-${{ matrix.java }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-java-${{ matrix.java }}
        path: result-java-${{ matrix.java }}.txt

  node:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node: ["12", "14", "16"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node }}
    - run: node --version
    - run: ./run node node-${{ matrix.node }} > result-node-${{ matrix.node }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-node-${{ matrix.node }}
        path: result-node-${{ matrix.node }}.txt

  python:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: ["3.7", "3.9", "pypy-3.7"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}
    - run: python --version
    - run: ./run python python-${{ matrix.python }} > result-python-${{ matrix.python }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-python-${{ matrix.python }}
        path: result-python-${{ matrix.python }}.txt

  rust:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        rust: ["1.52.1", "1.51.0", "1.50.0"]
    steps:
    - uses: actions/checkout@v2
    - uses: actions-rs/toolchain@v1
      with:
          toolchain: ${{ matrix.rust }}
          override: true
          profile: minimal
    - run: rustc --version
    - run: ./run rust rust-${{ matrix.rust }} > result-rust-${{ matrix.rust }}.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result-rust-${{ matrix.rust }}
        path: result-rust-${{ matrix.rust }}.txt

  collect:
    needs:
    - bash
    - c
    - deno
    - go
    - java
    - node
    - python
    - rust
    runs-on: ubuntu-latest
    steps:
    - uses: actions/download-artifact@v2
    - run: find .
    - run: tar Jcvf result.tar.xz result-*/result-*.txt
    - uses: actions/upload-artifact@v2
      with:
        name: result
        path: result.tar.xz
